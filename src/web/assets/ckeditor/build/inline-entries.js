(()=>{var e={782:(e,t,n)=>{e.exports=n(237)("./src/core.js")},783:(e,t,n)=>{e.exports=n(237)("./src/engine.js")},311:(e,t,n)=>{e.exports=n(237)("./src/ui.js")},584:(e,t,n)=>{e.exports=n(237)("./src/utils.js")},901:(e,t,n)=>{e.exports=n(237)("./src/widget.js")},237:e=>{"use strict";e.exports=CKEditor5.dll}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{"use strict";n.r(r),n.d(r,{CraftInlineEntries:()=>m});var e=n(782),t=n(901);class i extends e.Command{execute(e){const t=this.editor,n=t.model.document.selection;t.model.change((r=>{const i=r.createElement("craftInlineEntryModel",{...Object.fromEntries(n.getAttributes()),cardHtml:e.cardHtml,entryId:e.entryId});t.model.insertObject(i,null,null,{setSelection:"after"})}))}refresh(){const e=this.editor.model.document.selection,t=!e.isCollapsed&&e.getFirstRange();this.isEnabled=!t}}class o extends e.Plugin{static get requires(){return[t.Widget]}static get pluginName(){return"CraftInlineEntriesEditing"}init(){this._defineSchema(),this._defineConverters();const e=this.editor;e.commands.add("insertInlineEntry",new i(e)),e.editing.mapper.on("viewToModelPosition",(0,t.viewToModelPositionOutsideModelElement)(e.model,(e=>{e.hasClass("cke-inline-entry-card")})))}_defineSchema(){this.editor.model.schema.register("craftInlineEntryModel",{inheritAllFrom:"$inlineObject",allowAttributes:["cardHtml","entryId"],allowChildren:!1})}_defineConverters(){const e=this.editor.conversion;e.for("upcast").elementToElement({view:{name:"craft-inline-entry"},model:(e,{writer:t})=>{const n=e.getAttribute("data-card-html"),r=e.getAttribute("data-entry-id");return t.createElement("craftInlineEntryModel",{cardHtml:n,entryId:r})}}),e.for("editingDowncast").elementToElement({model:"craftInlineEntryModel",view:(e,{writer:r})=>{const i=e.getAttribute("entryId")??null,o=r.createContainerElement("span",{class:"cke-inline-entry-card","data-entry-id":i});return n(e,r,o),(0,t.toWidget)(o,r)}}),e.for("dataDowncast").elementToElement({model:"craftInlineEntryModel",view:(e,{writer:t})=>{const n=e.getAttribute("entryId")??null;return t.createContainerElement("craft-inline-entry",{"data-entry-id":n})}});const n=(e,t,n)=>{console.log(e),this._getCardHtml(e).then((e=>{const r=t.createRawElement("div",null,(function(t){t.innerHTML=e.cardHtml,Craft.appendHeadHtml(e.headHtml),Craft.appendBodyHtml(e.bodyHtml)}));t.insert(t.createPositionAt(n,0),r);const i=this.editor;i.editing.view.focus(),setTimeout((()=>{Craft.cp.elementThumbLoader.load($(i.ui.element))}),100),i.model.change((e=>{i.ui.update(),$(i.sourceElement).trigger("keyup")}))}))}}async _getCardHtml(e){let t=e.getAttribute("cardHtml")??null;console.log(t);let n=$(this.editor.sourceElement).parents(".field");const r=$(n[0]).data("layout-element");if(t)return{cardHtml:t};const i=e.getAttribute("entryId")??null,o=Craft.siteId;try{const e=this.editor,t=$(e.ui.view.element).closest("form,.lp-editor-container").data("elementEditor");t&&await t.checkForm(),console.log(i);const{data:n}=await Craft.sendActionRequest("POST","ckeditor/ckeditor/entry-card-html",{data:{entryId:i,siteId:o,layoutElementUid:r}});return n}catch(e){console.error(e?.response?.data);return{cardHtml:'<div class="element card"><div class="card-content"><div class="card-heading"><div class="label error"><span>'+(e?.response?.data?.message||"An unknown error occurred.")+"</span></div></div></div></div>"}}}}var s=n(311),l=n(783),a=n(584);class d extends l.DomEventObserver{constructor(e){super(e),this.domEventType="dblclick"}onDomEvent(e){this.fire(e.type,e)}}class c extends e.Plugin{static get requires(){return[t.WidgetToolbarRepository]}static get pluginName(){return"CraftInlineEntriesUI"}init(){this.editor.ui.componentFactory.add("createInlineEntry",(e=>this._createToolbarEntriesButton(e))),this.editor.ui.componentFactory.add("editInlineEntryBtn",(e=>this._createEditEntryBtn(e))),this._listenToEvents()}afterInit(){this.editor.plugins.get(t.WidgetToolbarRepository).register("inlineEntriesBalloon",{ariaLabel:Craft.t("ckeditor","Inline Entry toolbar"),items:["editInlineEntryBtn"],getRelatedElement:e=>{const n=e.getSelectedElement();return n&&(0,t.isWidget)(n)&&n.hasClass("cke-inline-entry-card")?(console.log("return",n),n):null}})}_listenToEvents(){const e=this.editor.editing.view,t=e.document;e.addObserver(d),this.editor.listenTo(t,"dblclick",((e,t)=>{if("craftInlineEntryModel"===this.editor.editing.mapper.toModelElement(t.target.parent).name){const e=this.editor.model.document.selection.getSelectedElement().getAttribute("entryId");this._showEditEntrySlideout(e)}}))}_createToolbarEntriesButton(e){const t=this.editor,n=t.config.get("entryTypeOptions"),r=t.commands.get("insertInlineEntry");if(!n||!n.length)return;const i=(0,s.createDropdown)(e);return i.buttonView.set({label:Craft.t("app","New {type}",{type:Craft.t("app","inline entry")}),tooltip:!0,withText:!0}),i.bind("isEnabled").to(r),(0,s.addListToDropdown)(i,(()=>this._getDropdownItemsDefinitions(n,r)),{ariaLabel:Craft.t("ckeditor","Entry types list")}),this.listenTo(i,"execute",(e=>{this._showCreateEntrySlideout(e.source.commandValue)})),i}_getDropdownItemsDefinitions(e,t){const n=new a.Collection;return e.map((e=>{const t={type:"button",model:new s.ViewModel({commandValue:e.value,label:e.label||e.value,icon:e.icon,withText:!0})};n.add(t)})),n}_createEditEntryBtn(e){const t=new s.ButtonView(e);return t.set({isEnabled:!0,label:Craft.t("app","Edit {type}",{type:Craft.t("app","inline entry")}),tooltip:!0,withText:!0}),this.listenTo(t,"execute",(e=>{const t=this.editor.model.document.selection.getSelectedElement().getAttribute("entryId");this._showEditEntrySlideout(t)})),t}_showEditEntrySlideout(e){Craft.createElementEditor(this.elementType,{elementId:e})}async _showCreateEntrySlideout(e){const t=this.editor,n=t.config.get("nestedElementAttributes");console.log(n);const r=Object.assign({},n,{typeId:e}),i=$(t.ui.view.element).closest("form,.lp-editor-container").data("elementEditor");let o;i&&(await i.markDeltaNameAsModified(t.sourceElement.name),r.ownerId=i.getDraftElementId(n.ownerId)),console.log(r);try{o=(await Craft.sendActionRequest("POST","elements/create",{data:r})).data,console.log(o)}catch(e){throw Craft.cp.displayError(e?.response?.data?.error),e}Craft.createElementEditor(this.elementType,{elementId:o.element.id,draftId:o.element.draftId,params:{fresh:1}}).on("submit",(e=>{console.log(e),t.commands.execute("insertInlineEntry",{entryId:e.data.id})}))}}class m extends e.Plugin{static get requires(){return[o,c]}static get pluginName(){return"CraftInlineEntries"}}})(),(window.CKEditor5=window.CKEditor5||{}).inlineEntries=r})();